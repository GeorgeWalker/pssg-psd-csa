// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Gov.Jag.Pssg.Csa.Interfaces.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Microsoft.Dynamics.CRM.competitor
    /// </summary>
    public partial class MicrosoftDynamicsCRMcompetitor
    {
        /// <summary>
        /// Initializes a new instance of the MicrosoftDynamicsCRMcompetitor
        /// class.
        /// </summary>
        public MicrosoftDynamicsCRMcompetitor()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MicrosoftDynamicsCRMcompetitor
        /// class.
        /// </summary>
        public MicrosoftDynamicsCRMcompetitor(string address2City = default(string), int? importsequencenumber = default(int?), int? timezoneruleversionnumber = default(int?), int? reportingyear = default(int?), System.Guid? entityimageid = default(System.Guid?), string address2County = default(string), string weaknesses = default(string), string yominame = default(string), System.Guid? processid = default(System.Guid?), string versionnumber = default(string), System.Guid? competitorid = default(System.Guid?), string name = default(string), string address1Postalcode = default(string), int? address2Utcoffset = default(int?), int? reportingquarter = default(int?), string tickersymbol = default(string), string address1Postofficebox = default(string), string address1Composite = default(string), decimal? reportedrevenueBase = default(decimal?), string address2Upszone = default(string), System.Guid? address1Addressid = default(System.Guid?), string address2Line3 = default(string), System.Guid? _organizationidValue = default(System.Guid?), string address1Telephone3 = default(string), string address2Postalcode = default(string), string keyproduct = default(string), string address2Longitude = default(string), string opportunities = default(string), string address1Upszone = default(string), string address2Name = default(string), string address2Latitude = default(string), int? address1Utcoffset = default(int?), string address1City = default(string), string threats = default(string), string address1Stateorprovince = default(string), string stockexchange = default(string), string address2Postofficebox = default(string), string entityimageUrl = default(string), string winpercentage = default(string), string address2Stateorprovince = default(string), string strengths = default(string), System.Guid? _createdbyValue = default(System.Guid?), System.DateTimeOffset? modifiedon = default(System.DateTimeOffset?), string address1Telephone1 = default(string), string address1County = default(string), string traversedpath = default(string), string address1Telephone2 = default(string), string address1Line2 = default(string), string address2Telephone1 = default(string), string address2Composite = default(string), int? address2Shippingmethodcode = default(int?), System.Guid? _modifiedonbehalfbyValue = default(System.Guid?), string address1Name = default(string), string address2Telephone3 = default(string), System.DateTimeOffset? createdon = default(System.DateTimeOffset?), string address1Line3 = default(string), int? utcconversiontimezonecode = default(int?), string address2Fax = default(string), System.Guid? _createdonbehalfbyValue = default(System.Guid?), string overview = default(string), byte[] entityimage = default(byte[]), string websiteurl = default(string), string address1Fax = default(string), System.Guid? _modifiedbyValue = default(System.Guid?), string address1Country = default(string), string address1Latitude = default(string), decimal? reportedrevenue = default(decimal?), long? entityimageTimestamp = default(long?), int? address2Addresstypecode = default(int?), string address1Longitude = default(string), int? address1Shippingmethodcode = default(int?), string address2Telephone2 = default(string), System.Guid? _transactioncurrencyidValue = default(System.Guid?), System.Guid? address2Addressid = default(System.Guid?), string address2Country = default(string), decimal? exchangerate = default(decimal?), System.DateTimeOffset? overriddencreatedon = default(System.DateTimeOffset?), string referenceinfourl = default(string), string address2Line2 = default(string), int? address1Addresstypecode = default(int?), string address1Line1 = default(string), System.Guid? stageid = default(System.Guid?), string address2Line1 = default(string), MicrosoftDynamicsCRMsystemuser createdby = default(MicrosoftDynamicsCRMsystemuser), MicrosoftDynamicsCRMsystemuser createdonbehalfby = default(MicrosoftDynamicsCRMsystemuser), MicrosoftDynamicsCRMsystemuser modifiedby = default(MicrosoftDynamicsCRMsystemuser), MicrosoftDynamicsCRMsystemuser modifiedonbehalfby = default(MicrosoftDynamicsCRMsystemuser), MicrosoftDynamicsCRMorganization organizationid = default(MicrosoftDynamicsCRMorganization), IList<MicrosoftDynamicsCRMsyncerror> competitorSyncErrors = default(IList<MicrosoftDynamicsCRMsyncerror>), IList<MicrosoftDynamicsCRMduplicaterecord> competitorDuplicateMatchingRecord = default(IList<MicrosoftDynamicsCRMduplicaterecord>), IList<MicrosoftDynamicsCRMduplicaterecord> competitorDuplicateBaseRecord = default(IList<MicrosoftDynamicsCRMduplicaterecord>), IList<MicrosoftDynamicsCRMasyncoperation> competitorAsyncOperations = default(IList<MicrosoftDynamicsCRMasyncoperation>), IList<MicrosoftDynamicsCRMmailboxtrackingfolder> competitorMailboxTrackingFolders = default(IList<MicrosoftDynamicsCRMmailboxtrackingfolder>), IList<MicrosoftDynamicsCRMprocesssession> competitorProcessSessions = default(IList<MicrosoftDynamicsCRMprocesssession>), IList<MicrosoftDynamicsCRMbulkdeletefailure> competitorBulkDeleteFailures = default(IList<MicrosoftDynamicsCRMbulkdeletefailure>), IList<MicrosoftDynamicsCRMprincipalobjectattributeaccess> competitorPrincipalobjectattributeaccess = default(IList<MicrosoftDynamicsCRMprincipalobjectattributeaccess>), MicrosoftDynamicsCRMprocessstage stageidProcessstage = default(MicrosoftDynamicsCRMprocessstage), MicrosoftDynamicsCRMtransactioncurrency transactioncurrencyid = default(MicrosoftDynamicsCRMtransactioncurrency), IList<MicrosoftDynamicsCRMconnection> competitorConnections1 = default(IList<MicrosoftDynamicsCRMconnection>), IList<MicrosoftDynamicsCRMconnection> competitorConnections2 = default(IList<MicrosoftDynamicsCRMconnection>), IList<MicrosoftDynamicsCRMannotation> competitorAnnotation = default(IList<MicrosoftDynamicsCRMannotation>), IList<MicrosoftDynamicsCRMlead> leadcompetitorsAssociation = default(IList<MicrosoftDynamicsCRMlead>), IList<MicrosoftDynamicsCRMopportunity> opportunitycompetitorsAssociation = default(IList<MicrosoftDynamicsCRMopportunity>), IList<MicrosoftDynamicsCRMsalesliterature> competitorsalesliteratureAssociation = default(IList<MicrosoftDynamicsCRMsalesliterature>), IList<MicrosoftDynamicsCRMproduct> competitorproductAssociation = default(IList<MicrosoftDynamicsCRMproduct>), IList<MicrosoftDynamicsCRMcompetitoraddress> competitorAddresses = default(IList<MicrosoftDynamicsCRMcompetitoraddress>), IList<MicrosoftDynamicsCRMopportunityclose> competitorOpportunityActivities = default(IList<MicrosoftDynamicsCRMopportunityclose>), IList<MicrosoftDynamicsCRMpostregarding> competitorPostRegardings = default(IList<MicrosoftDynamicsCRMpostregarding>), IList<MicrosoftDynamicsCRMpostfollow> competitorPostFollows = default(IList<MicrosoftDynamicsCRMpostfollow>))
        {
            Address2City = address2City;
            Importsequencenumber = importsequencenumber;
            Timezoneruleversionnumber = timezoneruleversionnumber;
            Reportingyear = reportingyear;
            Entityimageid = entityimageid;
            Address2County = address2County;
            Weaknesses = weaknesses;
            Yominame = yominame;
            Processid = processid;
            Versionnumber = versionnumber;
            Competitorid = competitorid;
            Name = name;
            Address1Postalcode = address1Postalcode;
            Address2Utcoffset = address2Utcoffset;
            Reportingquarter = reportingquarter;
            Tickersymbol = tickersymbol;
            Address1Postofficebox = address1Postofficebox;
            Address1Composite = address1Composite;
            ReportedrevenueBase = reportedrevenueBase;
            Address2Upszone = address2Upszone;
            Address1Addressid = address1Addressid;
            Address2Line3 = address2Line3;
            this._organizationidValue = _organizationidValue;
            Address1Telephone3 = address1Telephone3;
            Address2Postalcode = address2Postalcode;
            Keyproduct = keyproduct;
            Address2Longitude = address2Longitude;
            Opportunities = opportunities;
            Address1Upszone = address1Upszone;
            Address2Name = address2Name;
            Address2Latitude = address2Latitude;
            Address1Utcoffset = address1Utcoffset;
            Address1City = address1City;
            Threats = threats;
            Address1Stateorprovince = address1Stateorprovince;
            Stockexchange = stockexchange;
            Address2Postofficebox = address2Postofficebox;
            EntityimageUrl = entityimageUrl;
            Winpercentage = winpercentage;
            Address2Stateorprovince = address2Stateorprovince;
            Strengths = strengths;
            this._createdbyValue = _createdbyValue;
            Modifiedon = modifiedon;
            Address1Telephone1 = address1Telephone1;
            Address1County = address1County;
            Traversedpath = traversedpath;
            Address1Telephone2 = address1Telephone2;
            Address1Line2 = address1Line2;
            Address2Telephone1 = address2Telephone1;
            Address2Composite = address2Composite;
            Address2Shippingmethodcode = address2Shippingmethodcode;
            this._modifiedonbehalfbyValue = _modifiedonbehalfbyValue;
            Address1Name = address1Name;
            Address2Telephone3 = address2Telephone3;
            Createdon = createdon;
            Address1Line3 = address1Line3;
            Utcconversiontimezonecode = utcconversiontimezonecode;
            Address2Fax = address2Fax;
            this._createdonbehalfbyValue = _createdonbehalfbyValue;
            Overview = overview;
            Entityimage = entityimage;
            Websiteurl = websiteurl;
            Address1Fax = address1Fax;
            this._modifiedbyValue = _modifiedbyValue;
            Address1Country = address1Country;
            Address1Latitude = address1Latitude;
            Reportedrevenue = reportedrevenue;
            EntityimageTimestamp = entityimageTimestamp;
            Address2Addresstypecode = address2Addresstypecode;
            Address1Longitude = address1Longitude;
            Address1Shippingmethodcode = address1Shippingmethodcode;
            Address2Telephone2 = address2Telephone2;
            this._transactioncurrencyidValue = _transactioncurrencyidValue;
            Address2Addressid = address2Addressid;
            Address2Country = address2Country;
            Exchangerate = exchangerate;
            Overriddencreatedon = overriddencreatedon;
            Referenceinfourl = referenceinfourl;
            Address2Line2 = address2Line2;
            Address1Addresstypecode = address1Addresstypecode;
            Address1Line1 = address1Line1;
            Stageid = stageid;
            Address2Line1 = address2Line1;
            Createdby = createdby;
            Createdonbehalfby = createdonbehalfby;
            Modifiedby = modifiedby;
            Modifiedonbehalfby = modifiedonbehalfby;
            Organizationid = organizationid;
            CompetitorSyncErrors = competitorSyncErrors;
            CompetitorDuplicateMatchingRecord = competitorDuplicateMatchingRecord;
            CompetitorDuplicateBaseRecord = competitorDuplicateBaseRecord;
            CompetitorAsyncOperations = competitorAsyncOperations;
            CompetitorMailboxTrackingFolders = competitorMailboxTrackingFolders;
            CompetitorProcessSessions = competitorProcessSessions;
            CompetitorBulkDeleteFailures = competitorBulkDeleteFailures;
            CompetitorPrincipalobjectattributeaccess = competitorPrincipalobjectattributeaccess;
            StageidProcessstage = stageidProcessstage;
            Transactioncurrencyid = transactioncurrencyid;
            CompetitorConnections1 = competitorConnections1;
            CompetitorConnections2 = competitorConnections2;
            CompetitorAnnotation = competitorAnnotation;
            LeadcompetitorsAssociation = leadcompetitorsAssociation;
            OpportunitycompetitorsAssociation = opportunitycompetitorsAssociation;
            CompetitorsalesliteratureAssociation = competitorsalesliteratureAssociation;
            CompetitorproductAssociation = competitorproductAssociation;
            CompetitorAddresses = competitorAddresses;
            CompetitorOpportunityActivities = competitorOpportunityActivities;
            CompetitorPostRegardings = competitorPostRegardings;
            CompetitorPostFollows = competitorPostFollows;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "address2_city")]
        public string Address2City { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "importsequencenumber")]
        public int? Importsequencenumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "timezoneruleversionnumber")]
        public int? Timezoneruleversionnumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "reportingyear")]
        public int? Reportingyear { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "entityimageid")]
        public System.Guid? Entityimageid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "address2_county")]
        public string Address2County { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "weaknesses")]
        public string Weaknesses { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "yominame")]
        public string Yominame { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "processid")]
        public System.Guid? Processid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "versionnumber")]
        public string Versionnumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "competitorid")]
        public System.Guid? Competitorid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "address1_postalcode")]
        public string Address1Postalcode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "address2_utcoffset")]
        public int? Address2Utcoffset { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "reportingquarter")]
        public int? Reportingquarter { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "tickersymbol")]
        public string Tickersymbol { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "address1_postofficebox")]
        public string Address1Postofficebox { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "address1_composite")]
        public string Address1Composite { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "reportedrevenue_base")]
        public decimal? ReportedrevenueBase { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "address2_upszone")]
        public string Address2Upszone { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "address1_addressid")]
        public System.Guid? Address1Addressid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "address2_line3")]
        public string Address2Line3 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_organizationid_value")]
        public System.Guid? _organizationidValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "address1_telephone3")]
        public string Address1Telephone3 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "address2_postalcode")]
        public string Address2Postalcode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "keyproduct")]
        public string Keyproduct { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "address2_longitude")]
        public string Address2Longitude { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "opportunities")]
        public string Opportunities { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "address1_upszone")]
        public string Address1Upszone { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "address2_name")]
        public string Address2Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "address2_latitude")]
        public string Address2Latitude { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "address1_utcoffset")]
        public int? Address1Utcoffset { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "address1_city")]
        public string Address1City { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "threats")]
        public string Threats { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "address1_stateorprovince")]
        public string Address1Stateorprovince { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "stockexchange")]
        public string Stockexchange { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "address2_postofficebox")]
        public string Address2Postofficebox { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "entityimage_url")]
        public string EntityimageUrl { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "winpercentage")]
        public string Winpercentage { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "address2_stateorprovince")]
        public string Address2Stateorprovince { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "strengths")]
        public string Strengths { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_createdby_value")]
        public System.Guid? _createdbyValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "modifiedon")]
        public System.DateTimeOffset? Modifiedon { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "address1_telephone1")]
        public string Address1Telephone1 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "address1_county")]
        public string Address1County { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "traversedpath")]
        public string Traversedpath { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "address1_telephone2")]
        public string Address1Telephone2 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "address1_line2")]
        public string Address1Line2 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "address2_telephone1")]
        public string Address2Telephone1 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "address2_composite")]
        public string Address2Composite { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "address2_shippingmethodcode")]
        public int? Address2Shippingmethodcode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_modifiedonbehalfby_value")]
        public System.Guid? _modifiedonbehalfbyValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "address1_name")]
        public string Address1Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "address2_telephone3")]
        public string Address2Telephone3 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "createdon")]
        public System.DateTimeOffset? Createdon { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "address1_line3")]
        public string Address1Line3 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "utcconversiontimezonecode")]
        public int? Utcconversiontimezonecode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "address2_fax")]
        public string Address2Fax { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_createdonbehalfby_value")]
        public System.Guid? _createdonbehalfbyValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "overview")]
        public string Overview { get; set; }

        /// <summary>
        /// </summary>
        [JsonConverter(typeof(Base64UrlJsonConverter))]
        [JsonProperty(PropertyName = "entityimage")]
        public byte[] Entityimage { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "websiteurl")]
        public string Websiteurl { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "address1_fax")]
        public string Address1Fax { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_modifiedby_value")]
        public System.Guid? _modifiedbyValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "address1_country")]
        public string Address1Country { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "address1_latitude")]
        public string Address1Latitude { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "reportedrevenue")]
        public decimal? Reportedrevenue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "entityimage_timestamp")]
        public long? EntityimageTimestamp { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "address2_addresstypecode")]
        public int? Address2Addresstypecode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "address1_longitude")]
        public string Address1Longitude { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "address1_shippingmethodcode")]
        public int? Address1Shippingmethodcode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "address2_telephone2")]
        public string Address2Telephone2 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_transactioncurrencyid_value")]
        public System.Guid? _transactioncurrencyidValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "address2_addressid")]
        public System.Guid? Address2Addressid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "address2_country")]
        public string Address2Country { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "exchangerate")]
        public decimal? Exchangerate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "overriddencreatedon")]
        public System.DateTimeOffset? Overriddencreatedon { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "referenceinfourl")]
        public string Referenceinfourl { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "address2_line2")]
        public string Address2Line2 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "address1_addresstypecode")]
        public int? Address1Addresstypecode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "address1_line1")]
        public string Address1Line1 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "stageid")]
        public System.Guid? Stageid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "address2_line1")]
        public string Address2Line1 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "createdby")]
        public MicrosoftDynamicsCRMsystemuser Createdby { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "createdonbehalfby")]
        public MicrosoftDynamicsCRMsystemuser Createdonbehalfby { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "modifiedby")]
        public MicrosoftDynamicsCRMsystemuser Modifiedby { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "modifiedonbehalfby")]
        public MicrosoftDynamicsCRMsystemuser Modifiedonbehalfby { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "organizationid")]
        public MicrosoftDynamicsCRMorganization Organizationid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Competitor_SyncErrors")]
        public IList<MicrosoftDynamicsCRMsyncerror> CompetitorSyncErrors { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Competitor_DuplicateMatchingRecord")]
        public IList<MicrosoftDynamicsCRMduplicaterecord> CompetitorDuplicateMatchingRecord { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Competitor_DuplicateBaseRecord")]
        public IList<MicrosoftDynamicsCRMduplicaterecord> CompetitorDuplicateBaseRecord { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Competitor_AsyncOperations")]
        public IList<MicrosoftDynamicsCRMasyncoperation> CompetitorAsyncOperations { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "competitor_MailboxTrackingFolders")]
        public IList<MicrosoftDynamicsCRMmailboxtrackingfolder> CompetitorMailboxTrackingFolders { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Competitor_ProcessSessions")]
        public IList<MicrosoftDynamicsCRMprocesssession> CompetitorProcessSessions { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Competitor_BulkDeleteFailures")]
        public IList<MicrosoftDynamicsCRMbulkdeletefailure> CompetitorBulkDeleteFailures { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "competitor_principalobjectattributeaccess")]
        public IList<MicrosoftDynamicsCRMprincipalobjectattributeaccess> CompetitorPrincipalobjectattributeaccess { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "stageid_processstage")]
        public MicrosoftDynamicsCRMprocessstage StageidProcessstage { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "transactioncurrencyid")]
        public MicrosoftDynamicsCRMtransactioncurrency Transactioncurrencyid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "competitor_connections1")]
        public IList<MicrosoftDynamicsCRMconnection> CompetitorConnections1 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "competitor_connections2")]
        public IList<MicrosoftDynamicsCRMconnection> CompetitorConnections2 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Competitor_Annotation")]
        public IList<MicrosoftDynamicsCRMannotation> CompetitorAnnotation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "leadcompetitors_association")]
        public IList<MicrosoftDynamicsCRMlead> LeadcompetitorsAssociation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "opportunitycompetitors_association")]
        public IList<MicrosoftDynamicsCRMopportunity> OpportunitycompetitorsAssociation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "competitorsalesliterature_association")]
        public IList<MicrosoftDynamicsCRMsalesliterature> CompetitorsalesliteratureAssociation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "competitorproduct_association")]
        public IList<MicrosoftDynamicsCRMproduct> CompetitorproductAssociation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "competitor_addresses")]
        public IList<MicrosoftDynamicsCRMcompetitoraddress> CompetitorAddresses { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "competitor_opportunity_activities")]
        public IList<MicrosoftDynamicsCRMopportunityclose> CompetitorOpportunityActivities { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "competitor_PostRegardings")]
        public IList<MicrosoftDynamicsCRMpostregarding> CompetitorPostRegardings { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "competitor_PostFollows")]
        public IList<MicrosoftDynamicsCRMpostfollow> CompetitorPostFollows { get; set; }

    }
}
