// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Gov.Jag.Pssg.Csa.Interfaces
{
    using Microsoft.Rest;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for Csudemandandorders.
    /// </summary>
    public static partial class CsudemandandordersExtensions
    {
            /// <summary>
            /// Get entities from csu_demandandorders
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='orderby'>
            /// Order items by property values
            /// </param>
            /// <param name='select'>
            /// Select properties to be returned
            /// </param>
            /// <param name='expand'>
            /// Expand related entities
            /// </param>
            public static MicrosoftDynamicsCRMcsuDemandandorderCollection Get(this ICsudemandandorders operations, IList<string> orderby = default(IList<string>), IList<string> select = default(IList<string>), IList<string> expand = default(IList<string>))
            {
                return operations.GetAsync(orderby, select, expand).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get entities from csu_demandandorders
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='orderby'>
            /// Order items by property values
            /// </param>
            /// <param name='select'>
            /// Select properties to be returned
            /// </param>
            /// <param name='expand'>
            /// Expand related entities
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<MicrosoftDynamicsCRMcsuDemandandorderCollection> GetAsync(this ICsudemandandorders operations, IList<string> orderby = default(IList<string>), IList<string> select = default(IList<string>), IList<string> expand = default(IList<string>), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(orderby, select, expand, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Get entities from csu_demandandorders
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='orderby'>
            /// Order items by property values
            /// </param>
            /// <param name='select'>
            /// Select properties to be returned
            /// </param>
            /// <param name='expand'>
            /// Expand related entities
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static HttpOperationResponse<MicrosoftDynamicsCRMcsuDemandandorderCollection> GetWithHttpMessages(this ICsudemandandorders operations, IList<string> orderby = default(IList<string>), IList<string> select = default(IList<string>), IList<string> expand = default(IList<string>), Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.GetWithHttpMessagesAsync(orderby, select, expand, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Add new entity to csu_demandandorders
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// New entity
            /// </param>
            /// <param name='prefer'>
            /// Required in order for the service to return a JSON representation of the
            /// object.
            /// </param>
            public static MicrosoftDynamicsCRMcsuDemandandorder Create(this ICsudemandandorders operations, MicrosoftDynamicsCRMcsuDemandandorder body, string prefer = "return=representation")
            {
                return operations.CreateAsync(body, prefer).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Add new entity to csu_demandandorders
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// New entity
            /// </param>
            /// <param name='prefer'>
            /// Required in order for the service to return a JSON representation of the
            /// object.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<MicrosoftDynamicsCRMcsuDemandandorder> CreateAsync(this ICsudemandandorders operations, MicrosoftDynamicsCRMcsuDemandandorder body, string prefer = "return=representation", CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateWithHttpMessagesAsync(body, prefer, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Add new entity to csu_demandandorders
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='body'>
            /// New entity
            /// </param>
            /// <param name='prefer'>
            /// Required in order for the service to return a JSON representation of the
            /// object.
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static HttpOperationResponse<MicrosoftDynamicsCRMcsuDemandandorder> CreateWithHttpMessages(this ICsudemandandorders operations, MicrosoftDynamicsCRMcsuDemandandorder body, string prefer = "return=representation", Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.CreateWithHttpMessagesAsync(body, prefer, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get entity from csu_demandandorders by key
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='csuDemandandorderid'>
            /// key: csu_demandandorderid of csu_demandandorder
            /// </param>
            /// <param name='select'>
            /// Select properties to be returned
            /// </param>
            /// <param name='expand'>
            /// Expand related entities
            /// </param>
            public static MicrosoftDynamicsCRMcsuDemandandorder DemandandordersByKey(this ICsudemandandorders operations, System.Guid csuDemandandorderid, IList<string> select = default(IList<string>), IList<string> expand = default(IList<string>))
            {
                return operations.DemandandordersByKeyAsync(csuDemandandorderid, select, expand).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get entity from csu_demandandorders by key
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='csuDemandandorderid'>
            /// key: csu_demandandorderid of csu_demandandorder
            /// </param>
            /// <param name='select'>
            /// Select properties to be returned
            /// </param>
            /// <param name='expand'>
            /// Expand related entities
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<MicrosoftDynamicsCRMcsuDemandandorder> DemandandordersByKeyAsync(this ICsudemandandorders operations, System.Guid csuDemandandorderid, IList<string> select = default(IList<string>), IList<string> expand = default(IList<string>), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.DemandandordersByKeyWithHttpMessagesAsync(csuDemandandorderid, select, expand, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Get entity from csu_demandandorders by key
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='csuDemandandorderid'>
            /// key: csu_demandandorderid of csu_demandandorder
            /// </param>
            /// <param name='select'>
            /// Select properties to be returned
            /// </param>
            /// <param name='expand'>
            /// Expand related entities
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static HttpOperationResponse<MicrosoftDynamicsCRMcsuDemandandorder> DemandandordersByKeyWithHttpMessages(this ICsudemandandorders operations, System.Guid csuDemandandorderid, IList<string> select = default(IList<string>), IList<string> expand = default(IList<string>), Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.DemandandordersByKeyWithHttpMessagesAsync(csuDemandandorderid, select, expand, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Update entity in csu_demandandorders
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='csuDemandandorderid'>
            /// key: csu_demandandorderid of csu_demandandorder
            /// </param>
            /// <param name='body'>
            /// New property values
            /// </param>
            public static void DemandandordersByKey1(this ICsudemandandorders operations, System.Guid csuDemandandorderid, MicrosoftDynamicsCRMcsuDemandandorder body)
            {
                operations.DemandandordersByKey1Async(csuDemandandorderid, body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Update entity in csu_demandandorders
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='csuDemandandorderid'>
            /// key: csu_demandandorderid of csu_demandandorder
            /// </param>
            /// <param name='body'>
            /// New property values
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DemandandordersByKey1Async(this ICsudemandandorders operations, System.Guid csuDemandandorderid, MicrosoftDynamicsCRMcsuDemandandorder body, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DemandandordersByKey1WithHttpMessagesAsync(csuDemandandorderid, body, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Update entity in csu_demandandorders
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='csuDemandandorderid'>
            /// key: csu_demandandorderid of csu_demandandorder
            /// </param>
            /// <param name='body'>
            /// New property values
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static HttpOperationResponse DemandandordersByKey1WithHttpMessages(this ICsudemandandorders operations, System.Guid csuDemandandorderid, MicrosoftDynamicsCRMcsuDemandandorder body, Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.DemandandordersByKey1WithHttpMessagesAsync(csuDemandandorderid, body, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete entity from csu_demandandorders
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='csuDemandandorderid'>
            /// key: csu_demandandorderid of csu_demandandorder
            /// </param>
            /// <param name='ifMatch'>
            /// ETag
            /// </param>
            public static void DemandandordersByKey2(this ICsudemandandorders operations, System.Guid csuDemandandorderid, string ifMatch = default(string))
            {
                operations.DemandandordersByKey2Async(csuDemandandorderid, ifMatch).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete entity from csu_demandandorders
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='csuDemandandorderid'>
            /// key: csu_demandandorderid of csu_demandandorder
            /// </param>
            /// <param name='ifMatch'>
            /// ETag
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DemandandordersByKey2Async(this ICsudemandandorders operations, System.Guid csuDemandandorderid, string ifMatch = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DemandandordersByKey2WithHttpMessagesAsync(csuDemandandorderid, ifMatch, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Delete entity from csu_demandandorders
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='csuDemandandorderid'>
            /// key: csu_demandandorderid of csu_demandandorder
            /// </param>
            /// <param name='ifMatch'>
            /// ETag
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static HttpOperationResponse DemandandordersByKey2WithHttpMessages(this ICsudemandandorders operations, System.Guid csuDemandandorderid, string ifMatch = default(string), Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.DemandandordersByKey2WithHttpMessagesAsync(csuDemandandorderid, ifMatch, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

    }
}
